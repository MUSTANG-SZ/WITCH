cluster:
  name: "MOO_1142"
  Te: 5.0
  freq: 90e9
paths:
  tods: "/scratch/s/sievers/skh/tods/MOO1142/TS_EaCMS0f0_51_16_Feb_2022/"
  glob: "Signal_TOD*.fits"
  ndo: False
  odo: False
  outroot: "/scratch/s/sievers/skh/Reductions"
  cut:
    - "Signal_TOD-AGBT18B_215_04-s88.fits"
    - "Signal_TOD-AGBT18B_215_04-s89.fits"
    - "Signal_TOD-AGBT18B_215_04-s91.fits"
    - "Signal_TOD-AGBT18B_215_04-s92.fits"
    - "Signal_TOD-AGBT18B_215_04-s93.fits"
    - "Signal_TOD-AGBT18B_215_04-s94.fits"
coords:
  z: 1.19 
  r_map: "3.0*60"
  dr: "1."
  x0: 3.06642436 
  y0: 0.26972541 
  conv_factor: "(180 * 3600) / np.pi"
beam:
  fwhm1: "9.735"
  amp1: 0.9808
  fwhm2: "32.627"
  amp2: 0.0192
bowling:
  sub_poly: True
  method: "pred2"
  degree: 2
minkasi:
  noise:
    class: "minkasi.NoiseSmoothedSVD"
    args: "[]"
    kwargs: "{'fwhm':10}"
  maxiter: 50
  npass: 5
  dograd: False
sim: False 
models:
  isobeta:
    func: "partial(helper, dx=float(y2K_RJ(freq, Te)*dr*XMpc/me), n_isobeta=1)"
    parameters:
      dx_1:
        value: 0.0
        to_fit: False 
        priors:
          type: "flat"
          value: "[-5.0, 5.0]"
      dy_1:
        value: 0.0
        to_fit: False 
        priors:
          type: "flat"
          value: "[-5.0, 5.0]"
      dz_1:
        value: 0.0
        to_fit: False
      r_1:
        value: 33.0
        to_fit: True 
      r_2:
        value: 18.0
        to_fit: True
      r_3:
        value: "params[par_idx['isobeta-r_2']]" 
        to_fit: False
        re_eval: True
      theta_1:
        value: 0.1754625589496545 
        to_fit: True 
        priors:
          type: "flat"
          value: "[0.0, 2*np.pi]"
      beta_1:
        value: .98
        to_fit: True
      amp_1:
        value: 0
        to_fit: True
  double_gauss:
    func: "partial(helper, xyz=xyz, dx=float(dr), beam=beam, argnums=np.where(_to_fit)[0], n_gaussian=2)"
    parameters:
      dx_1:
        value: 19.0 
        to_fit: False 
      dy_1:
        value: 4.3 
        to_fit: False 
      dz_1:
        value: 0.0 
        to_fit: False
      r_1:
        value: 1.0 
        to_fit: False 
        priors:
          type: "flat"
          value: "[0.8, 1.2]"
      r_2:
        value: 1.0
        to_fit: False 
      r_3:
        value: 1.0
        to_fit: False 
      theta_1:
        value: .448 
        to_fit: False 
        priors:
          type: "flat"
          value: "[0.0, 2*np.pi]"
      sigma_1:
        value: 4.0 
        to_fit: False
      amp_1:
        value: 0.0009485246831922859 
        to_fit: True 
      dx_2:
        value: 19.0 
        to_fit: False 
      dy_2:
        value: 4.3 
        to_fit: False 
      dz_2:
        value: 0.0 
        to_fit: False
      r_4:
        value: 1.0 
        to_fit: False 
        priors:
          type: "flat"
          value: "[0.8, 1.2]"
      r_5:
        value: 1.0
        to_fit: False 
      r_6:
        value: 1.0
        to_fit: False 
      theta_2:
        value: .448 
        to_fit: False 
        priors:
          type: "flat"
          value: "[0.0, 2*np.pi]"
      sigma_2:
        value: 2.0 
        to_fit: False
      amp_2:
        value: 0.0009485246831922859 
        to_fit: True 
  #gauss:
  #  func: "minkasi.derivs_from_gauss_c"
  #  parameters:
  #    ps_ra:
  #      value: 3.0665133132790805 
  #      to_fit: False 
  #    ps_dec:
  #      value: 0.2697014918195695 
  #      to_fit: False 
  #    sigma:
  #      value: "1.85e-5"
  #      to_fit: True 
  #    amp:
  #      value: "1.7e-4"
        #to_fit: True 
